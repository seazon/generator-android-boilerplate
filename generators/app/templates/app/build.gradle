apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion COMPILE_SDK_VERSION

    defaultConfig {
        applicationId "com.wiredcraft.androidtemplate"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
        buildToolsVersion = BUILD_TOOLS_VERSION

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("$project.rootDir/security/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        beta {
            storeFile file("$project.rootDir/security/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        stable {
            storeFile file("$project.rootDir/security/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix '-DEBUG'

            signingConfig signingConfigs.debug
            resValue "string", "app_name", "Debug Ver"
        }
        release {
            // Disable debug
            debuggable false

            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'full-r8-config.pro'
        }
    }

    flavorDimensions "api", "channel"
    productFlavors {
        dev {
            dimension "api"
        }
        stag {
            dimension "api"
        }
        prod {
            dimension "api"
        }
        beta {
            dimension "channel"
            versionNameSuffix '-beta'
            applicationIdSuffix ".beta"
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "ENCRYPTION", "false"
            resValue "string", "app_name", "Template Beta"
        }
        stable {
            dimension "channel"
            signingConfig signingConfigs.stable
            buildConfigField "boolean", "ENCRYPTION", "true"
            resValue "string", "app_name", "Template"
        }
    }
    sourceSets {
        main {
            java.srcDirs += 'src/main/java'
            jniLibs.srcDirs += 'libs'
        }
        dev.java.srcDirs += 'src/dev/java'
        stag.java.srcDirs += 'src/stag/java'
        prod.java.srcDirs += 'src/prod/java'
    }
    dataBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        // Turns off checks for the issue IDs you specify.
        //disable 'TypographyFractions','TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        //enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        //check 'NewApi', 'InlinedApi'
        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // if set to true (default), stops the build if errors are found.
        abortOnError true
        // if true, only report errors.
        ignoreWarnings true
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    packagingOptions {
        pickFirst 'META-INF/*'
        pickFirst 'google/protobuf/*'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    kapt "com.github.bumptech.glide:compiler:${libs.glide}"
    kapt "com.google.dagger:dagger-compiler:${libs.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${libs.dagger}"

    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    implementation 'jp.co.cyberagent.android:gpuimage:2.0.3'

    implementation "com.google.firebase:firebase-core:${libs.playServicesVersion}"
    implementation 'com.crittercism:crittercism-android-agent:5.8.12'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-4'

    testImplementation "junit:junit:${libs.junit}"
    androidTestImplementation "androidx.test:runner:${libs.runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${libs.espresso}"
    androidTestImplementation "androidx.test:rules:${libs.rules}"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'

   
    api group: 'com.jakewharton.threetenabp', name: 'threetenabp', version: '1.2.1'

    api "androidx.navigation:navigation-fragment:${libs.nav}"
    // For Kotlin use navigation-fragment-ktx
    api "androidx.navigation:navigation-fragment-ktx:${libs.nav}"
    // For Kotlin use navigation-fragment-ktx
    api "androidx.navigation:navigation-ui:${libs.nav}" // For Kotlin use navigation-ui-ktx
    api "androidx.navigation:navigation-ui-ktx:${libs.nav}" // For Kotlin use navigation-ui-ktx

    implementation "androidx.security:security-crypto:${libs.security}"

    //
    api "androidx.webkit:webkit:${libs.webkit}"
    api "androidx.core:core-ktx:${libs.core}"
    api "androidx.appcompat:appcompat:${libs.appcompat}"
    api "androidx.fragment:fragment:${libs.fragment}"
    api "androidx.fragment:fragment-ktx:${libs.fragment}"
    debugImplementation "androidx.fragment:fragment-testing:${libs.fragment}"
    api "androidx.constraintlayout:constraintlayout:${libs.constraint}"
    // https://mvnrepository.com/artifact/androidx.viewpager2/viewpager2
    api group: 'androidx.viewpager2', name: 'viewpager2', version: "${libs.viewPager2}"
    api group: 'androidx.recyclerview', name: 'recyclerview', version: "${libs.recyclerview}"

    api "com.google.android.material:material:${libs.material}"
    api "androidx.coordinatorlayout:coordinatorlayout:${libs.coordinatorlayout}"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${libs.kotlin}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${libs.coroutines}"

    api "androidx.legacy:legacy-support-v4:${libs.legacy}"
    api "androidx.lifecycle:lifecycle-runtime:${libs.lifecycle}"
    api "androidx.lifecycle:lifecycle-livedata:${libs.lifecycle}"
    api group: 'androidx.lifecycle', name: 'lifecycle-livedata-ktx', version: "${libs.lifecycle}"
    api "androidx.lifecycle:lifecycle-extensions:${libs.lifecycle}"
    api "androidx.lifecycle:lifecycle-viewmodel:${libs.lifecycle}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${libs.lifecycle}"

    api "com.google.dagger:dagger:${libs.dagger}"
    api "com.google.dagger:dagger-android:${libs.dagger}"
    api "com.google.dagger:dagger-android-support:${libs.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libs.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${libs.dagger}"

    api 'com.neovisionaries:nv-i18n:1.24'
    api 'io.michaelrocks:libphonenumber-android:8.10.16'

    api 'com.github.promeg:tinypinyin:2.0.3'

    //compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    compileOnly 'org.jetbrains:annotations:13.0'
    api 'com.google.code.gson:gson:2.8.5'
    implementation 'commons-lang:commons-lang:2.6'
    //implementation 'javax.validation:validation-api:1.1.0.CR2'

    implementation("com.google.guava:guava:28.2-android")

    api "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libs.okhttp}"
    implementation "com.squareup.okhttp3:mockwebserver:${libs.okhttp}"
    implementation "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
    // https://mvnrepository.com/artifact/com.apollographql.apollo/apollo-coroutines-support
    implementation group: 'com.apollographql.apollo', name: 'apollo-coroutines-support', version: "${libs.apollo}"
    //implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    api 'com.afollestad.material-dialogs:core:0.9.6.0'

    api "com.github.bumptech.glide:glide:${libs.glide}"
    api "com.github.bumptech.glide:annotations:${libs.glide}"
    api "com.github.bumptech.glide:okhttp3-integration:${libs.glide}"
    api("com.github.bumptech.glide:recyclerview-integration:${libs.glide}") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }

    api 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.3.0'


    testImplementation "junit:junit:${libs.junit}"
    androidTestImplementation "androidx.test:runner:${libs.runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${libs.espresso}"
}
